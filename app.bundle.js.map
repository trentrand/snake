{"version":3,"sources":["webpack:///webpack/bootstrap 3459f54dd34f51891158","webpack:///./src/js/main.js"],"names":["canvas","document","getElementById","CANVAS_WIDTH","width","CANVAS_HEIGHT","height","GRID_SIZE","DIRECTION","Up","Down","Left","Right","CONFIG","length","direction","speed","snakeColor","fruitColor","GameObject","x","y","Snake","bodySegments","keepTail","currentDirection","i","newSegment","push","head","getHead","snake","outOfBounds","gameOver","collidesWithSelf","fruit","collides","eat","pop","unshift","Fruit","context","fillStyle","fillRect","tailSegments","segment","getRandomCoordinate","axis","toLowerCase","max","Math","floor","random","console","error","drawGrid","moveTo","lineTo","strokeStyle","lineWidth","stroke","endGame","clearRect","font","textAlign","fillText","score","handleController","event","keyCode","startGame","gameLoop","moveHead","draw","setTimeout","getContext","undefined","window","addEventListener"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3459f54dd34f51891158","const canvas = document.getElementById('canvas');\nconst CANVAS_WIDTH = canvas.width;\nconst CANVAS_HEIGHT = canvas.height;\nconst GRID_SIZE = 25;\n\nconst DIRECTION = {\n    Up: 38,\n    Down: 40,\n    Left: 37,\n    Right: 39\n}\n\nconst CONFIG = {\n    length: 4,\n    direction: DIRECTION.Right,\n    speed: 10,\n    snakeColor: \"black\",\n    fruitColor: \"red\"\n}\n\nclass GameObject {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    collides(x, y) {\n        return this.x === x && this.y === y;\n    }\n\n    outOfBounds() {\n        return this.x < 0 || this.x > CANVAS_WIDTH || this.y < 0 || this.y > CANVAS_HEIGHT;\n    }\n}\n\nclass Snake extends GameObject {\n    constructor(x, y) {\n        super(x, y);\n        this.bodySegments = [];\n        this.keepTail = false;\n        this.currentDirection = CONFIG.direction;\n\n        for(let i = 0; i < CONFIG.length; i++) {\n            const newSegment = new GameObject(x, y);\n            this.bodySegments.push(newSegment);\n        }\n    }\n\n    getHead() { return this.bodySegments[0]; }\n\n    get direction() { return this.currentDirection; }\n    set direction(direction) { this.currentDirection = direction; }\n\n    moveHead() {\n        const head = this.getHead();\n\n        let newSegment;\n        switch(this.currentDirection) {\n            case DIRECTION.Up:\n                newSegment = new GameObject(head.x, head.y -= GRID_SIZE);\n                break;\n            case DIRECTION.Down:\n                newSegment = new GameObject(head.x, head.y += GRID_SIZE);\n                break;\n            case DIRECTION.Left:\n                newSegment = new GameObject(head.x -= GRID_SIZE, head.y);\n                break;\n            case DIRECTION.Right:\n                newSegment = new GameObject(head.x += GRID_SIZE, head.y);\n                break;\n            default:\n                break;\n        }\n        \n        if (snake.outOfBounds()) {\n            gameOver = true;\n        }\n        \n        if (snake.collidesWithSelf()) {\n            gameOver = true;\n        }\n        \n        if (fruit.collides(head.x, head.y)) {\n            snake.eat();\n        }\n        \n        if (!this.keepTail) {\n            this.bodySegments.pop();\n        } else this.keepTail = false;\n        \n        this.bodySegments.unshift(newSegment);\n    }\n    \n    eat() {\n        fruit = new Fruit();\n        this.keepTail = true;\n    }\n\n    draw() {\n        context.fillStyle = CONFIG.snakeColor;\n        for (let i = 0; i < this.bodySegments.length; i++) {\n            context.fillRect(this.bodySegments[i].x, this.bodySegments[i].y, GRID_SIZE, GRID_SIZE);\n        }\n    }\n\n    outOfBounds() {\n        const head = this.getHead();\n\n        return head.x < 0 || head.x >= CANVAS_WIDTH || head.y < 0 || head.y >= CANVAS_HEIGHT;\n    }\n\n    collidesWithSelf() {\n        let [head, ...tailSegments] = this.bodySegments;\n\n        for(let segment of tailSegments) {\n            if (head.collides(segment.x, segment.y)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nclass Fruit extends GameObject {\n    constructor() {\n        const x = getRandomCoordinate('x');\n        const y = getRandomCoordinate('y');\n        super(x, y);\n    }\n\n    draw() {\n        context.fillStyle = CONFIG.fruitColor;\n        context.fillRect(this.x, this.y, GRID_SIZE, GRID_SIZE);\n    }\n}\n\nlet getRandomCoordinate = (axis) => {\n    if (axis.toLowerCase() === 'x') {\n        const max = CANVAS_WIDTH / GRID_SIZE;\n        return (Math.floor(Math.random() * max)) * GRID_SIZE;\n        \n    } else if (axis.toLowerCase() === 'y') {\n        const max = CANVAS_HEIGHT / GRID_SIZE;\n        return (Math.floor(Math.random() * max)) * GRID_SIZE;\n    }\n\n    console.error(\"Please specify an axis ('x' or 'y')\");\n};\n\nlet drawGrid = () => {\n    for (var x = 0; x <= CANVAS_WIDTH; x += GRID_SIZE) {\n        context.moveTo(x, 0);\n        context.lineTo(x, CANVAS_HEIGHT);\n    }\n\n    for (var y = 0; y <= CANVAS_HEIGHT; y += GRID_SIZE) {\n        context.moveTo(0, y);\n        context.lineTo(CANVAS_HEIGHT, y);\n    }\n\n    context.strokeStyle = \"black\";\n    context.lineWidth = 1;\n    context.stroke();\n};\n\nlet endGame = () => {\n    context.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    context.fillStyle = \"black\";\n\n    context.font = \"64px Comic Sans MS\";\n    context.textAlign = \"center\";\n    context.fillText(\"GAME OVER\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2); \n\n    const score = snake.bodySegments.length - CONFIG.length;\n    context.font = \"32px Comic Sans MS\";\n    context.fillText(`Score: ${score}`, CANVAS_WIDTH / 2, (1.9 * CANVAS_HEIGHT / 3)); \n    \n    context.font = \"16px Comic Sans MS\";\n    context.fillText(`Press space key to play again`, CANVAS_WIDTH / 2, (2.2 * CANVAS_HEIGHT / 3)); \n}\n\nlet handleController = (event) => {\n    const direction = event.keyCode;\n    \n    if (direction >= DIRECTION.Left && direction <= DIRECTION.Down) {\n        if (direction === DIRECTION.Left && snake.direction === DIRECTION.Right) {\n            return;\n        }\n        if (direction === DIRECTION.Right && snake.direction === DIRECTION.Left) {\n            return;\n        }\n        if (direction === DIRECTION.Up && snake.direction === DIRECTION.Down) {\n            return;\n        }\n        if (direction === DIRECTION.Down && snake.direction === DIRECTION.Up) {\n            return;\n        }\n        snake.direction = direction;\n    }\n\n    if (gameOver && event.keyCode === 32) {\n        startGame();\n    }\n};\n\nlet gameLoop = () => {\n    if (gameOver) {\n        endGame();\n        return;\n    } \n    \n    context.clearRect(0,0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    drawGrid();\n\n    snake.moveHead();\n    snake.draw();\n\n    fruit.draw();\n    \n    // Loop game at `CONFIG.speed` FPS\n    setTimeout(function () {\n        gameLoop();\n    }, 1000 / CONFIG.speed);\n};\n\n/* Game State */\nlet gameOver = false;\n\n/* Game Objects */\nlet snake;\nlet fruit;\n\nlet startGame = () => {\n    gameOver = false;\n    \n    snake = new Snake(GRID_SIZE, GRID_SIZE);\n    fruit = new Fruit();\n\n    gameLoop();\n}\n\n/* Intialize Game */\nif (typeof (canvas.getContext) !== undefined) {\n    var context = canvas.getContext('2d');\n    window.addEventListener('keydown', handleController, false);\n\n   startGame();\n\n} else {\n    console.error(`\n        This browser does not support HTML5 Canvas.\n        Please try loading this page with a newer browser.\n    `);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js"],"sourceRoot":""}